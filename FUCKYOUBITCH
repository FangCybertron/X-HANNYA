-----MAIN1------

require "import"
import "AndLua"
import "android.app.*"
import "android.os.*"
import "android.widget.*"
import "android.view.*"
import "android.app.*"
import "android.os.*"
import "android.widget.*"
import "android.view.*"
import "android.content.Context"
import "AndLua"
import "android.content.*"
import "android.provider.Settings"
import "android.net.Uri"
import "android.content.Intent"
import "android.content.pm.PackageManager"
import "android.graphics.PixelFormat"
import "android.graphics.Typeface"
import "android.content.Context"



if Build.VERSION.SDK_INT >= 26 then
  activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS).setStatusBarColor(0xff182840);
end

activity.setTheme(android.R.style.Theme_DeviceDefault)
activity.ActionBar.hide()

tickexit=0
function onKeyDown(code,event)
  if string.find(tostring(event),"KEYCODE_BACK") ~= nil then
    if tickexit+3 > tonumber(os.time()) then
      activity.finish()
     else
      print("Press back again to exit app")
      tickexit=tonumber(os.time())
    end
    return true
  end
end


local L0_1
L0_1 = {
  LinearLayout,
  {
    CardView,
    radius = "10",
    layout_width = "wrap",
    layout_marginRight = "30dp",
    backgroundColor = "0xFFFFFFFF",
    layout_marginTop = "25dp",
    layout_height = "wrap",
    layout_marginBottom = "25dp",
    layout_marginLeft = "30dp",
    {
      LinearLayout,
      orientation = "horizontal",
      layout_width = "match_parent",
      layout_height = "match_parent",
      gravity = "center",
      {
        TextView,
        id = "toasttxt",
        textColor = "0xFF000000",
        layout_width = "match_parent",
        layout_height = "wrap_content",
        padding = "10dp",
        gravity = "center"
      }
    }
  }
}
L0_1.orientation = "vertical"
L0_1.layout_width = "fill"
L0_1.layout_height = "wrap"
lordcrowncustomtoast = L0_1
function L0_1(A0_2)
  toast = Toast.makeText(activity, "", Toast.LENGTH_SHORT).setView(loadlayout(lordcrowncustomtoast)).show()
  toasttxt.setText(A0_2)
end
TOASTTXT = L0_1


LAYOUTVIP={

  LinearLayout;
  backgroundColor="0xFF202428";
  layout_width="fill";
  orientation="vertical";
  layout_height="fill";


  {
    TextView;
    text="LOGIN";
    padding="8dp";
    textSize="40sp";
    layout_gravity="center";
    textColor="0xFF008EFF";
    gravity="center";
  };

  {
    LinearLayout;
    layout_height="30dp";
    gravity="center";
    layout_width="wrap";
    layout_gravity="center";
  };

  {
    CardView;
    --orientation="horizontal";
    backgroundColor="0xFFFFFFFF";
    cardElevation="30dp";
    radius=50;
    layout_height="wrap";
    layout_width="85%w";
    --gravity="center";
    id="us";
    Visibility="visible";
    layout_gravity="center";
    {
      LinearLayout;
      layout_width="wrap";
      gravity="center";
      orientation="horizontal";
      layout_height="wrap";
      layout_gravity="center";

      {
        EditText;
        TextColor="0xFF000000";
        id="txtUsername";
        layout_width="80%w";
        padding="5dp";
        layout_height="40dp";
        hintTextColor="#519D9E";
        hint="Username";
        textSize="15sp";
        background="#00000000";
      };

    };
  };
  {
    LinearLayout;
    layout_height="10dp";
    gravity="center";
    layout_width="wrap";
  };

  {
    CardView;
    --orientation="horizontal";
    backgroundColor="0xFFFFFFFF";
    cardElevation="30dp";
    radius=50;
    layout_width="85%w";
    --gravity="center";
    layout_height="wrap";
    id="pw";
    Visibility="visible";
    layout_gravity="center";

    {
      LinearLayout;
      layout_width="wrap";
      gravity="center";
      orientation="horizontal";
      layout_height="wrap";
      layout_gravity="center";
      id="vp";

      {
        EditText;
        TextColor="0xFF000000";
        inputType="textPassword";
        id="txtPassword";
        layout_width="75%w";
        padding="5dp";
        layout_height="40dp";
        hintTextColor="#519D9E";
        hint="Password";
        textSize="15sp";
        background="#00000000";
      };

      {
        LinearLayout;
        layout_height="10dp";
        gravity="center";
        layout_width="wrap";
        layout_gravity="center";
      };


      {
        ImageView;
        layout_width="22dp";
        layout_height="22dp";
        layout_gravity="center";
        colorFilter="0xFF000000";
        id="show1";
        src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/showpw.png";
      };
      {
        ImageView;
        layout_width="22dp";
        layout_height="22dp";
        layout_gravity="center";
        colorFilter="0xFF000000";
        id="hide1";
        src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/hidepw.png";
      };
    };
  };


  {
    LinearLayout;
    layout_width="1dp";
    layout_height="1dp";
  };
  {
    RadioGroup;
    layout_height="wrap";
    layout_width="-1";
    orientation="horizontal";
    gravity="center";
    {
      CheckBox;
      id="rememberme";
      text="Remember Me";
      gravity="center";
      textSize="13";
      textColor="0xFFFFFFFF";
    };
    {
      LinearLayout;
      layout_height="1%h";
      layout_width="18%w";
      gravity="center";
    };
    {
      TextView;
      id="forgotpassword";
      text="Forgot Password?";
      gravity="center";
      textSize="13";
      textColor="0xFFFFFFFF";
    };
  };
  {
    LinearLayout;
    layout_height="1dp";
    gravity="center";
    layout_width="wrap";
    layout_gravity="center";
  };

  {
    LinearLayout;
    orientation="horizontal";
    layout_width="match_parent";
    layout_height="50dp";
    layout_marginLeft="70dp";
    layout_marginRight="70dp";
    {
      CardView;
      backgroundColor="0xFF008EFF";
      layout_margin="5dp";
      layout_height="match_parent";
      id="btnLogin";
      CardElevation="30dp";
      layout_width="50dp";
      radius=10;
      layout_weight="1";
      layout_gravity="center";
      {
        LinearLayout;
        backgroundColor="0x00000000";
        layout_width="match_parent";
        orientation="horizontal";
        layout_height="match_parent";
        gravity="center";
        layout_gravity="center";
        {
          TextView;
          text="LOGIN";
          textSize="20sp";
          textColor="0xFFFFFFFF";
          layout_gravity="center";
        };
      };
    };
    {
      CardView;
      backgroundColor="0xFF008EFF";
      layout_margin="5dp";
      layout_height="match_parent";
      id="getid";
      CardElevation="30dp";
      layout_width="50dp";
      radius=10;
      layout_weight="1";
      layout_gravity="center";
      {
        LinearLayout;
        backgroundColor="0x00000000";
        layout_width="match_parent";
        orientation="horizontal";
        layout_height="match_parent";
        gravity="center";
        layout_gravity="center";
        {
          TextView;
          text="GET ID";
          textSize="20sp";
          textColor="0xFFFFFFFF";
          layout_gravity="center";
        };
      };
    };
  };
};




activity.setContentView(loadlayout(LAYOUTVIP))


function Waterdropanimation(Controls,time)
  import "android.animation.ObjectAnimator"
  ObjectAnimator().ofFloat(Controls,"scaleX",{1,.8,1.3,.9,1}).setDuration(time).start()
  ObjectAnimator().ofFloat(Controls,"scaleY",{1,.8,1.3,.9,1}).setDuration(time).start()
end


function CircleButton(view,InsideColor,radiu,InsideColor1)
  import "android.graphics.drawable.GradientDrawable"
  drawable = GradientDrawable()
  drawable.setShape(GradientDrawable.RECTANGLE)
  drawable.setCornerRadii({radiu, radiu, radiu, radiu, radiu, radiu, radiu, radiu})
  drawable.setColor(InsideColor)
  drawable.setStroke(2, InsideColor1)
  view.setBackgroundDrawable(drawable)
end




import "android.view.animation.AlphaAnimation"
Alpha=AlphaAnimation(0,1)
Alpha.setDuration(800)







--CircleButton(us,0x20000000,10,0x00000000)
--CircleButton(pw,0x20000000,10,0x00000000)
--CircleButton(uidX,0x20000000,10,0x00000000)






function proggresmod()
  P_layout={
    LinearLayout;
    layout_height="fill";
    layout_width="fill";
    orientation="horizontal";
    gravity="center";
    {
      LinearLayout;
      orientation="vertical";
      layout_height="fill";
      layout_width="fill";
      gravity="center";
      layout_gravity="center";
      {
        ProgressBar;
        layout_gravity="center";
        layout_width="70dp";
        style="?android:attr/progressBarStyleLarge";
        layout_height="70dp";
        layout_margin="5dp";
      };
      {
        TextView;
        id="",
        text="Please Wait",
        layout_width="fill";
        layout_gravity="center";
        textColor="0xFFFFFFFF";
        gravity="center";
      };
    };
  };

  local D=AlertDialog.Builder(this)
  D.setView(loadlayout(P_layout))
  D.setCancelable(false)
  X=D.show()
  import "android.graphics.drawable.GradientDrawable"
  local radiu=0
  X.getWindow().setBackgroundDrawable(GradientDrawable().setCornerRadii({radiu,radiu,radiu,radiu,radiu,radiu,radiu,radiu}).setColor(0x00000000))
end




----------------------LOGIN MENU-----------------------------------
import "android.provider.Settings$Secure"
android_id = Secure.getString(activity.getContentResolver(), Secure.ANDROID_ID)




local pref = activity.getSharedPreferences("x_hannya", Context.MODE_PRIVATE)
username = pref.getString("username", "")
password = pref.getString("password", "")
txtPassword.setTypeface(Typeface.MONOSPACE)
txtUsername.setTypeface(Typeface.MONOSPACE)

remember = pref.getString("rememberme", "")
if remember == "true" then
  txtUsername.setText(username)
  txtPassword.setText(password)
  rememberme.setChecked(true)
 else
  rememberme.setChecked(false)
end


function rememberme.OnCheckedChangeListener()
  if rememberme.checked then
    local pref = activity.getSharedPreferences("x_hannya", Context.MODE_PRIVATE)
    local save = pref.edit()
    save.putString("rememberme", "true")
    save.commit()
   else
    local pref = activity.getSharedPreferences("x_hannya", Context.MODE_PRIVATE)
    local save = pref.edit()
    save.putString("rememberme", "false")
    save.commit()
  end
end

function LoginExpired()
  function Exp1()
    local D1 = AlertDialog.Builder(this)
    D1.setTitle("        APPLICATION EXPIRED")
    D1.setMessage("PLEASE CONTACT DEVELOPER TO GET UPDATE !!\n\nᴅᴏɴ'ᴛ ᴛʀʏ ᴛᴏ ᴄʜᴀɴɢᴇ ʏᴏᴜʀ ᴛɪᴍᴇ ᴀɴᴅ ᴅᴀᴛᴇ シ︎")
    D1.setCancelable(false)
    D1.setPositiveButton(" EXIT ",{onClick=function(v)
        activity.finish()
      end})
    SANKY1=D1.show()
  end


  function Exp2()
    local D2 = AlertDialog.Builder(this)
    D2.setTitle("   FAILED TO BYPASS EXPIRED")
    D2.setMessage("ɪ sᴀɪᴅ ᴅᴏɴ'ᴛ ᴛʀʏ ᴛᴏ ᴄʜᴀɴɢᴇ ʏᴏᴜʀ ᴛɪᴍᴇ ᴀɴᴅ ᴅᴀᴛᴇ, ʙᴇᴄᴀᴜsᴇ ᴛʜᴀᴛ ᴅᴏᴇsɴ'ᴛ ᴡᴏʀᴋ ᴀɴʏᴍᴏʀᴇ シ︎\n\n              FUCK YOU BITCH !!!")
    D2.setCancelable(false)
    D2.setPositiveButton(" EXIT ",{onClick=function(v)
        activity.finish()
      end})
    SANKY2=D2.show()
  end

  Exp1()
  Exp2()

  function expired()
    Date1 = "20210710"--Expired Date
    Date2 = "%Y%m%d"--Will be show if the date has changed to less than the current date set.
    Date3 = "20210704"--Current Date
    date = os.date("%Y%m%d")
    --------DATE1
    if date >= Date1 then
      SANKY2.dismiss()
     else
      --------DATE2
      if date >= Date2 then
        SANKY1.dismiss()
      end
      --------DATE3
      if date >= Date3 then
        SANKY1.dismiss()
        SANKY2.dismiss()
      end
    end
  end
  expired()
end

host = "https://xhannyaproject.000webhostapp.com"


function btnLogin.onClick()
  Waterdropanimation(btnLogin,20)
  local username = txtUsername.text
  local password = txtPassword.text
  local uuid = android_id
  if username =="" then
    TOASTTXT("ENTER USERNAME !!")
   else if password =="" then
      TOASTTXT("ENTER PASSWORD !!")
     else
      local pref = activity.getSharedPreferences("x_hannya", Context.MODE_PRIVATE)
      local save = pref.edit()
      save.putString("username",username)
      save.putString("password",password)
      save.commit()
      proggresmod()
      Http.post(host.."/loginuser.php", "username=" ..username.. "&password=" ..password.. "&uuid="..uuid, nil, function(code,body,cookie,header)
        X.dismiss()
        if code == 200 then
          if body:match("XHANNYA") then
            EXPIREDLOGIN=string.match(tostring(body),";(.-);")
            LoginExpired()
            TOASTTXT("WELCOME "..username)
            main2()
           else
            TOASTTXT((body))
          end
         else
          TOASTTXT("Can't Connect To Server!")
        end
      end)
    end
  end
end



function getid.onClick()
  import "android.provider.Settings$Secure"
  uid = Secure.getString(activity.getContentResolver(), Secure.ANDROID_ID)
  import "android.content.Context"
  activity.getSystemService(Context.CLIPBOARD_SERVICE).setText(uid)
  TOASTTXT("ID ALREADY COPIED")
end

function forgotpassword.onClick()
  Waterdropanimation(getkey,100)
  url = "https://t.me/MissFanggg"
  activity.startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(url)))
end


us.setVisibility(LinearLayout.VISIBLE)
pw.setVisibility(LinearLayout.VISIBLE)
btnLogin.setVisibility(LinearLayout.VISIBLE)
rememberme.setVisibility(LinearLayout.VISIBLE)


import "android.text.method.HideReturnsTransformationMethod"
import "android.text.method.PasswordTransformationMethod"

txtPassword.setTransformationMethod(HideReturnsTransformationMethod.getInstance())
txtPassword.setTransformationMethod(PasswordTransformationMethod.getInstance())
hide1.setVisibility(View.GONE)

isMax=false
vp.onClick=function()
  if isMax==true then
    isMax=false
    show1.setVisibility(View.VISIBLE)
    hide1.setVisibility(View.GONE)
    txtPassword.setTransformationMethod(PasswordTransformationMethod.getInstance())
   else
    isMax=true
    show1.setVisibility(View.GONE)
    hide1.setVisibility(View.VISIBLE)
    txtPassword.setTransformationMethod(HideReturnsTransformationMethod.getInstance())
  end
end


----------------------MAIN2-------------------


function main2()
  require "import"
  import "android.app.*"
  import "android.os.*"
  import "android.widget.*"
  import "android.view.*"
  import "com.androlua.util.RootUtil"
  import "android.graphics.drawable.ColorDrawable"
  import "android.graphics.drawable.GradientDrawable"
  import "android.provider.Settings"
  import "android.content.Context"
  import "android.net.Uri"
  import "android.content.Intent"
  import "zip4j"
  import "appdownload"





  activity.setTheme(R.AndLua1)
  activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS).setStatusBarColor(0xFF202428);
  activity.overridePendingTransition(android.R.anim.fade_in,android.R.anim.fade_out)
  activity.setContentView(loadlayout(layout))
  activity.ActionBar.hide()


  if Settings.canDrawOverlays(activity) then else intent=Intent("android.settings.action.MANAGE_OVERLAY_PERMISSION");
    intent.setData(Uri.parse("package:" .. this.getPackageName())); this.startActivity(intent);
  end



  local L0_1
  L0_1 = {
    LinearLayout,
    {
      CardView,
      radius = "10",
      layout_width = "wrap",
      layout_marginRight = "30dp",
      backgroundColor = "0xFFFFFFFF",
      layout_marginTop = "25dp",
      layout_height = "wrap",
      layout_marginBottom = "25dp",
      layout_marginLeft = "30dp",
      {
        LinearLayout,
        orientation = "horizontal",
        layout_width = "match_parent",
        layout_height = "match_parent",
        gravity = "center",
        {
          TextView,
          id = "toasttxt",
          textColor = "0xFF000000",
          layout_width = "match_parent",
          layout_height = "wrap_content",
          padding = "10dp",
          gravity = "center"
        }
      }
    }
  }
  L0_1.orientation = "vertical"
  L0_1.layout_width = "fill"
  L0_1.layout_height = "wrap"
  lordcrowncustomtoast = L0_1
  function L0_1(A0_2)
    toast = Toast.makeText(activity, "", Toast.LENGTH_SHORT).setView(loadlayout(lordcrowncustomtoast)).show()
    toasttxt.setText(A0_2)
  end
  TOASTTXT = L0_1






  function onKeyDown(code,event)
    if code == event.KEYCODE_BACK then return true
    end
  end


  function Waterdropanimation(Controls,time)
    import "android.animation.ObjectAnimator"
    ObjectAnimator().ofFloat(Controls,"scaleX",{1,.8,1.3,.9,1}).setDuration(time).start()
    ObjectAnimator().ofFloat(Controls,"scaleY",{1,.8,1.3,.9,1}).setDuration(time).start()
  end


  function CircleButton(view,InsideColor,radiu,InsideColor1)
    import "android.graphics.drawable.GradientDrawable"
    drawable = GradientDrawable()
    drawable.setShape(GradientDrawable.RECTANGLE)
    drawable.setCornerRadii({radiu, radiu, radiu, radiu, radiu, radiu, radiu, radiu})
    drawable.setColor(InsideColor)
    drawable.setStroke(2, InsideColor1)
    view.setBackgroundDrawable(drawable)
  end









  function Win_minWindow6()
    if isMax==false then
      isMax=true
      LayoutVIP4.addView(minWindow6,WmHz4)
     else
      isMax=false
      LayoutVIP4.removeView(minWindow6)
    end
  end






  LayoutVIP=activity.getSystemService(Context.WINDOW_SERVICE)
  HasFocus=false
  WmHz =WindowManager.LayoutParams()
  if Build.VERSION.SDK_INT >= 26 then WmHz.type =WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY
   else WmHz.type =WindowManager.LayoutParams.TYPE_SYSTEM_ALERT
  end
  import "android.graphics.PixelFormat"
  WmHz.format =PixelFormat.RGBA_8888
  WmHz.x = 0
  WmHz.y = 0
  WmHz.flags=WindowManager.LayoutParams().FLAG_NOT_FOCUSABLE
  WmHz.gravity = Gravity.CENTER | Gravity.CENTER
  WmHz.width = WindowManager.LayoutParams.WRAP_CONTENT
  WmHz.height = WindowManager.LayoutParams.WRAP_CONTENT
  mainWindow = loadlayout(floating)
  isMax=false

  LayoutVIP1=activity.getSystemService(Context.WINDOW_SERVICE)
  HasFocus=false
  WmHz1 =WindowManager.LayoutParams()
  if Build.VERSION.SDK_INT >= 26 then WmHz1.type =WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY
   else WmHz1.type =WindowManager.LayoutParams.TYPE_SYSTEM_ALERT
  end
  import "android.graphics.PixelFormat"
  WmHz1.format =PixelFormat.RGBA_8888
  WmHz1.x = 0
  WmHz1.y = 0
  WmHz1.flags=WindowManager.LayoutParams().FLAG_NOT_FOCUSABLE
  WmHz1.gravity = Gravity.CENTER | Gravity.CENTER
  WmHz1.width = WindowManager.LayoutParams.WRAP_CONTENT
  WmHz1.height = WindowManager.LayoutParams.WRAP_CONTENT
  minWindow = loadlayout(icon)
  OpenM=false
  ----
  function Win_minWindow.OnTouchListener(v,event)
    if OpenM==false then
      if event.getAction()==MotionEvent.ACTION_DOWN then
        firstX=event.getRawX()
        firstY=event.getRawY()
        wmX=WmHz1.x
        wmY=WmHz1.y
       elseif event.getAction()==MotionEvent.ACTION_MOVE then
        WmHz1.x=wmX+(event.getRawX()-firstX)
        WmHz1.y=wmY+(event.getRawY()-firstY)
        LayoutVIP1.updateViewLayout(minWindow,WmHz1)
       elseif event.getAction()==MotionEvent.ACTION_UP then
       else
      end
    end
    return
    false
  end

  function fl.OnTouchListener(v,event)
    if event.getAction()==MotionEvent.ACTION_DOWN then
      firstX=event.getRawX()
      firstY=event.getRawY()
      wmX=WmHz.x
      wmY=WmHz.y
     elseif event.getAction()==MotionEvent.ACTION_MOVE then
      WmHz.x=wmX+(event.getRawX()-firstX)
      WmHz.y=wmY+(event.getRawY()-firstY)
      LayoutVIP.updateViewLayout(mainWindow,WmHz)
     elseif event.getAction()==MotionEvent.ACTION_UP then
    end
    return
    true
  end

  function Win_minWindow.onClick(v)
    Waterdropanimation(Win_minWindow,50)
    if OpenM==false then
      OpenM=true
      LayoutVIP.addView(mainWindow,WmHz)
    end
  end

  function t1.onClick(v)
    if OpenM==true then
      OpenM=false
      LayoutVIP.removeView(mainWindow)
    end
  end

  function t1.onLongClick(v)
    if isMax==true && OpenM==true then
      isMax=false OpenM=false
      LayoutVIP.removeView(mainWindow)
      LayoutVIP1.removeView(minWindow)

    end
  end


  model.setText(""..Build.MODEL)


  function time()
    hb()
  end

  function hb(十二)
    asp.setText(os.date("          %H:%M %p | %d-%m-%Y"))
  end

  function Refresh()
    require("import")
    while true do
      Thread.sleep(100)
      call("time")
    end
  end
  thread(Refresh)





  function start.onClick()
    Waterdropanimation(start,20)
    if Settings.canDrawOverlays(activity) then else intent=Intent("android.settings.action.MANAGE_OVERLAY_PERMISSION");
      intent.setData(Uri.parse("package:" .. this.getPackageName())); this.startActivity(intent);
    end
    if isMax==false then
      if btnRoot.checked then
        isMax=true
        vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
        vibrator.vibrate( long{100,50} ,-1)
        os.execute("su")
        LayoutVIP1.addView(minWindow,WmHz1)
        TOASTTXT("MODE ROOT ACTIVE")
       elseif btnNoroot.checked then
        isMax=true
        vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
        vibrator.vibrate( long{100,50} ,-1)
        LayoutVIP1.addView(minWindow,WmHz1)
        TOASTTXT("MODE NOT ROOT ACTIVE")
       else
        vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
        vibrator.vibrate( long{100,500} ,-1)
        TOASTTXT("PLEASE SELECT MODE !!!")
      end
    end
  end




  function startgame.onClick()
    if pcall(function()
        vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
        vibrator.vibrate( long{100,50} ,-1)
        activity.getPackageManager().getPackageInfo("com.mobile.legends", 0)
      end) then
      this.startActivity(activity.getPackageManager().getLaunchIntentForPackage("com.mobile.legends"))
     else
      viewIntent = Intent("android.intent.action.VIEW", Uri.parse("https://play.google.com/store/apps/details?id=com.mobile.legends"))
      activity.startActivity(viewIntent)
      TOASTTXT("GAME IS NOT INSTALLED")
    end
  end


  function stop.onClick()
    Waterdropanimation(stop,20)
    if isMax==true && OpenM==true then
      isMax=false OpenM=false
      LayoutVIP1.removeView(minWindow)
     elseif isMax==true && OpenM==false then
      isMax=false
      vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
      vibrator.vibrate( long{100,50} ,-1)
      LayoutVIP1.removeView(minWindow)
     else
      vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
      vibrator.vibrate( long{100,500} ,-1)
      TOASTTXT("MENU IS NOT RUNNING")
    end
  end


  function exit.onClick()
    vibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)
    vibrator.vibrate( long{100,50} ,-1)
    activity.finish()
  end



  function menu.onClick()
    activity.setContentView(loadlayout(menu))
    home.onClick=function()
      Waterdropanimation(home,20)
      main2()
    end

    pagev.addOnPageChangeListener{
      onPageScrolled=function(a,b,c)
      end,
      onPageSelected=function(page)
        if page==0 then

          menu.add("• Restore").onMenuItemClick = function()
            toolsdownload("RESTORING","https://github.com/missfangg/X-HANNYA/blob/main/PATCHER/miyabackup.zip?raw=true","/storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/android/lua/miyabackup.zip")
          end
          menu.add("• Legend").onMenuItemClick = function()
            toolsdownload("PATCHING","https://github.com/missfangg/X-HANNYA/blob/main/PATCHER/miyalegends.zip?raw=true","/storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/android/lua/miyalegends.zip")
          end

        end
        if page==1 then

        end
        if page==2 then

        end
      end,
      onPageScrollStateChanged=function(state)
      end,}

    function miya.onClick()
      miya.show()
    end
    miya = PopupMenu(activity, miya)
    menu = miya.Menu

  end










  import "android.graphics.PorterDuffColorFilter"
  import "android.graphics.PorterDuff"
  import "android.graphics.Paint"


  btnRoot.ButtonDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
  function btnRoot.OnCheckedChangeListener()
    if btnRoot.Checked then
      btnRoot.ButtonDrawable.setColorFilter(PorterDuffColorFilter(0xFF00FF00,PorterDuff.Mode.SRC_ATOP));
     else
      btnRoot.ButtonDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
    end
  end

  btnNoroot.ButtonDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
  function btnNoroot.OnCheckedChangeListener()
    if btnNoroot.Checked then
      btnNoroot.ButtonDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      btnNoroot.ButtonDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
    end
  end




  CircleButton(fix,0xFFFF0000,10,4287187697)
  CircleButton(enemylag,0xFFFF0000,10,4287187697)
  CircleButton(logs,0xFFFF0000,10,4287187697)
  CircleButton(win_mainviewX,0xFF202428,15,0xFFFF0000)
  CircleButton(iconf,0xFFFFFFFF,75,0xFFFFFFFF)
  CircleButton(droneviewtop,0xFF202428,20,0xFFFFFFFF)
  CircleButton(droneviewside,0xFF202428,20,0xFFFFFFFF)

  --SeekBar
  droneviewtop.ProgressDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP))
  droneviewtop.Thumb.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP))

  droneviewside.ProgressDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP))
  droneviewside.Thumb.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP))


  -----MEMORY----------


  function Exec(one)
    local two=activity.getApplicationInfo().nativeLibraryDir.."/"..(one)
    if RootUtil().haveRoot()==true then
      os.execute("su -c chmod 777 "..two)
      Runtime.getRuntime().exec("su -c "..two)
     else
      os.execute("chmod 777 "..two)
      Runtime.getRuntime().exec(""..two)
    end
  end


  function radarmap.OnCheckedChangeListener()
    if radarmap.checked then
      Exec("libsocket.so 2")
      radarmap.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      radarmap.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libsocket.so 3")
      radarmap.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      radarmap.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function unlockskin.OnCheckedChangeListener()
    if unlockskin.checked then
      Exec("libmime.so 2021")
      unlockskin.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      unlockskin.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libmime.so 2022")
      unlockskin.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      unlockskin.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function esplock.OnCheckedChangeListener()
    if esplock.checked then
      Exec("libsocket.so 30")
      esplock.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      esplock.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libsocket.so 31")
      esplock.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      esplock.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function skillnocd.OnCheckedChangeListener()
    if skillnocd.checked then
      Exec("libsocket.so 8")
      skillnocd.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      skillnocd.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libsocket.so 9")
      skillnocd.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      skillnocd.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function spamchat.OnCheckedChangeListener()
    if spamchat.checked then
      Exec("libsocket.so 6")
      spamchat.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      spamchat.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libsocket.so 7")
      spamchat.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      spamchat.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function removegrass.OnCheckedChangeListener()
    if removegrass.checked then
      Exec("libmd5.so 2021")
      removegrass.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      removegrass.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libmd5.so 2022")
      removegrass.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      removegrass.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function hidename.OnCheckedChangeListener()
    if hidename.checked then
      Exec("libsensor.so 1")
      hidename.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      hidename.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libsensor.so 2")
      hidename.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      hidename.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function fixgrass.OnCheckedChangeListener()
    if fixgrass.checked then
      Exec("libmime.so 2023")
      fixgrass.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      fixgrass.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      Exec("libmime.so 2024")
      fixgrass.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      fixgrass.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end



  droneviewtop.setOnSeekBarChangeListener{
    onProgressChanged=function(view, progress)
      if progress==0 then
        text.setText("DRONE VERTICAL 0 X")
        Exec("libsocket.so 22")

       elseif progress==1 then
        text.setText("DRONE VERTICAL 2 X")
        Exec("libsocket.so 21")

       elseif progress==2 then
        text.setText("DRONE VERTICAL 4 X")
        Exec("libsocket.so 20")

       elseif progress==3 then
        text.setText("DRONE VERTICAL 6 X")
        Exec("libsocket.so 19")

       elseif progress==4 then
        text.setText("DRONE VERTICAL 8 X")
        Exec("libsocket.so 18")

       elseif progress==5 then
        text.setText("DRONE VERTICAL 10 X")
        Exec("libsocket.so 17")

       elseif progress==6 then
        text.setText("DRONE VERTICAL 12 X")
        Exec("libsocket.so 16")

       elseif progress==7 then
        text.setText("DRONE VERTICAL 14 X")
        Exec("libsocket.so 15")

       elseif progress==8 then
        text.setText("DRONE VERTICAL 16 X")
        Exec("libsocket.so 14")

       elseif progress==9 then
        text.setText("DRONE VERTICAL 18 X")
        Exec("libsocket.so 13")

       elseif progress==10 then
        text.setText("DRONE VERTICAL 20 X")
        Exec("libsocket.so 12")
      end
    end
  }


  droneviewside.setOnSeekBarChangeListener{
    onProgressChanged=function(view, progress)
      if progress==0 then
        text2.setText("DRONE HORIZONTAL 0 X")
        Exec("libsocket.so 42")

       elseif progress==1 then
        text2.setText("DRONE HORIZONTAL 2 X")
        Exec("libsocket.so 41")

       elseif progress==2 then
        text2.setText("DRONE HORIZONTAL 4 X")
        Exec("libsocket.so 40")

       elseif progress==3 then
        text2.setText("DRONE HORIZONTAL 6 X")
        Exec("libsocket.so 39")

       elseif progress==4 then
        text2.setText("DRONE HORIZONTAL 8 X")
        Exec("libsocket.so 38")

       elseif progress==5 then
        text2.setText("DRONE HORIZONTAL 10 X")
        Exec("libsocket.so 37")

       elseif progress==6 then
        text2.setText("DRONE HORIZONTAL 12 X")
        Exec("libsocket.so 36")

       elseif progress==7 then
        text2.setText("DRONE HORIZONTAL 14 X")
        Exec("libsocket.so 35")

       elseif progress==8 then
        text2.setText("DRONE HORIZONTAL 16 X")
        Exec("libsocket.so 34")

       elseif progress==9 then
        text2.setText("DRONE HORIZONTAL 18 X")
        Exec("libsocket.so 33")

       elseif progress==10 then
        text2.setText("DRONE HORIZONTAL 20 X")
        Exec("libsocket.so 32")
      end
    end
  }


  function enemylag.onClick()
    if enemylag.checked then
      Exec("libsocket.so 1")
      TOASTTXT("ENEMY LAG ACTIVATED")
      CircleButton(enemylag,0xFFFF0000,10,4287187697)
     else
      Exec("libsocket.so 1")
      TOASTTXT("ENEMY LAG ACTIVATED")
      CircleButton(enemylag,0xFFFF0000,10,4287187697)
    end
  end


  function fix.onClick()
    if fix.checked then
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_043_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_032_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_003_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_024_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_004_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_041_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_007_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_015_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_042_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_027_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_044_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_001_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_019_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_021_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_046_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_009.unity3d")
      TOASTTXT("FIX BUG DRONE ACTIVATED")
      CircleButton(fix,0xFFFF0000,10,4287187697)
     else
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_043_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_032_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_003_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_024_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_004_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_041_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_007_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_015_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_042_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_027_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_044_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_001_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_019_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_021_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_046_add.unity3d")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/Scenes/android/PVP_009.unity3d")
      TOASTTXT("FIX BUG DRONE ACTIVATED")
      CircleButton(fix,0xFFFF0000,10,4287187697)
    end
  end


  function bypass.OnCheckedChangeListener()
    if bypass.checked then
      import "java.io.File"--导入File类
      File("storage/emulated/0/Android/data/com.mobile.legends/cache").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/UnityCache").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/BattleRecord").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA1"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/FightHistory").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA2"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/comlibs").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/X-HANNYA_COMLIBS"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/version/android/realversion.xml").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/version/android/X-HANNYA.xml"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/LiveSawHistory.bin").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/X-HANNYA.bin"))
      bypass.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      bypass.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      import "java.io.File"--导入File类
      File("storage/emulated/0/Android/data/com.mobile.legends/X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/cache"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/UnityCache"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA1").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/BattleRecord"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA2").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/FightHistory"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/X-HANNYA_COMLIBS").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/comlibs"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/version/android/X-HANNYA.xml").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/version/android/realversion.xml"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/X-HANNYA.bin").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/LiveSawHistory.bin"))
      bypass.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      bypass.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function antiban.OnCheckedChangeListener()
    if antiban.checked then
      import "java.io.File"--导入File类
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ActivityBugReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ActivityBugReport.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_BattleExperienceReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_BattleExperienceReport.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_CountryBattle_Report.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_CountryBattle_Report.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_HistoryRecordListItemReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_HistoryRecordListItemReport.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_LiveReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_LiveReport.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report_BattleEnd_MC.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report_BattleEnd_MC.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportDetails.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportDetails.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportNew.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportNew.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page0.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page0.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page1.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page1.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page2.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page2.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page3.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page3.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_WarReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_WarReport.unity3d_X-HANNYA"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_YesterdayWarReport.unity3d").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_YesterdayWarReport.unity3d_X-HANNYA"))
      antiban.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
      antiban.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFFFF0000,PorterDuff.Mode.SRC_ATOP));
     else
      import "java.io.File"--导入File类
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ActivityBugReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ActivityBugReport.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_BattleExperienceReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_BattleExperienceReport.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_CountryBattle_Report.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_CountryBattle_Report.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_HistoryRecordListItemReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_HistoryRecordListItemReport.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_LiveReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_LiveReport.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report_BattleEnd_MC.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_Report_BattleEnd_MC.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportDetails.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportDetails.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportNew.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_ReportNew.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page0.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page0.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page1.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page1.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page2.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page2.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page3.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_SeasonReport_page3.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_WarReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_WarReport.unity3d"))
      File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_YesterdayWarReport.unity3d_X-HANNYA").renameTo(File("storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/assets/UI/android/UI_YesterdayWarReport.unity3d"))
      antiban.ThumbDrawable.setColorFilter(PorterDuffColorFilter(0xFFFFFFFF,PorterDuff.Mode.SRC_ATOP));
      antiban.TrackDrawable.setColorFilter(PorterDuffColorFilter(0xFF090707,PorterDuff.Mode.SRC_ATOP));
    end
  end


  function logs.onClick()
    if logs.checked then
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/cache/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/BattleRecord/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/FightHistory/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/LiveSawHistory.bin")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/UnityCache/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/code_cache/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/X-HANNYA/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/X-HANNYA/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA1/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA2/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/X-HANNYA.bin")
      TOASTTXT("CLEAR CACHE & LOGS")
      CircleButton(logs,0xFFFF0000,10,4287187697)
     else
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/cache/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/BattleRecord/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/FightHistory/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/LiveSawHistory.bin")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/UnityCache/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/code_cache/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/X-HANNYA/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/X-HANNYA/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA1/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/X-HANNYA2/")
      os.execute("rm -rf /storage/emulated/0/Android/data/com.mobile.legends/files/dragon2017/android/X-HANNYA.bin")
      TOASTTXT("CLEAR CACHE & LOGS")
      CircleButton(logs,0xFFFF0000,10,4287187697)
    end
  end

  ----menu----
  menu={
    LinearLayout;
    background="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/bg.jpeg";
    layout_width="fill";
    orientation="vertical";
    id="bg";
    layout_height="fill";
    gravity="center";

    {
      LinearLayout;
      layout_height="10dp";
    };




    {
      CardView;
      layout_width="fill";
      backgroundColor="0x00000000";
      layout_height="wrap";
      cardElevation="0dp";
      radius="0dp";
      id="home";
      layout_gravity="center";
      {
        LinearLayout;
        layout_width="fill";
        gravity="left";
        layout_height="wrap";
        layout_gravity="center";
        {
          ImageView;
          src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/undo.png";
          padding="5dp";
          layout_height="30dp";
          layout_width="30dp";
          layout_gravity="center";
          colorFilter="0xFFEFDC05";
        };
        {
          TextView;
          layout_width="wrap";
          text=" MAIN MENU";
          layout_height="wrap";
          textSize="15sp";
          gravity="center";
          layout_gravity="center";
          textColor="0xFFEFDC05";
        };
      };
    };

    {
      LinearLayout;
      layout_height="15dp";
    };

    {
      PageView;
      id="pagev";
      layout_height="fill";
      layout_width="fill";
      pages={
        "page1";
        "page2";
        "page3";
      };
    };

    {
      LinearLayout;
      layout_gravity="center";
      layout_width="fill";
      Orientation="vertical";
      gravity="center|bottom";
      layout_height="fill";
    };
  };



  ------LAYOUT-------


  import "android.content.Context"


  local username
  local pref = activity.getSharedPreferences("x_hannya", Context.MODE_PRIVATE)
  username = pref.getString("username", "")

  host = "https://xhannyaproject.000webhostapp.com"


  --[[  local username = usertext.text
  Http.post(host.."/userdatainfo.php", "&username=" ..username,nil, function(code,body,cookie,header,content)
  end)
]]
  exptext.setText(EXPIREDLOGIN)
  usertext.setText(username)
end

layout={
  LinearLayout;
  backgroundColor="0xFF202428";
  layout_width="fill";
  orientation="vertical";
  id="bg";
  layout_height="fill";
  gravity="center";

  {
    TextView;
    text="X - HANNYA";
    textSize="20sp";
    textColor="0xFF008EFF";
    id="title";
    gravity="center";
    layout_margin="1dp";
  };
  {
    CardView;
    id="di";
    layout_width="fill";
    layout_height="wrap";
    backgroundColor="0xFF202428";
    layout_gravity="center";
    layout_marginLeft="7dp";
    layout_marginRight="7dp";
    layout_margin="3dp";
    radius=20;
    cardElevation="5dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="vertical";
      layout_height="wrap";
      gravity="center";
      padding="1dp";
      {
        LinearLayout;
        layout_width="match_parent";
        layout_height="1";
      };
      {
        LinearLayout;
        layout_width="match_parent";
        backgroundColor="0x00000000";
        orientation="horizontal";
        layout_height="wrap";
        gravity="left";
        layout_marginLeft="5dp";
        layout_margin="3dp";
        {
          ImageView;
          colorFilter="0xFFFFFFFF";
          src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/us.png";
          layout_gravity="center";
          layout_width="20dp";
          layout_height="20dp";
          padding="1dp";
        };
        {
          TextView;
          text=" USER";
          layout_width="25%w";
          id="";
          gravity="left|center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFFFFFFFF";
        };
        {
          TextView;
          text=": ";
          layout_width="wrap";
          layout_height="wrap";
          textSize="16sp";
          layout_gravity="center";
          textColor="0xFFFFFFFF";
        };
        {
          TextView;
          text="";
          layout_width="wrap";
          id="usertext";
          layout_marginLeft="5dp";
          gravity="center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFF00FF00";
        };
      };
    };
  };



  {
    CardView;
    id="di";
    layout_width="fill";
    layout_height="wrap";
    backgroundColor="0xFF202428";
    layout_gravity="center";
    layout_marginLeft="7dp";
    layout_marginRight="7dp";
    layout_margin="3dp";
    radius=20;
    cardElevation="5dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="vertical";
      layout_height="wrap";
      gravity="center";
      padding="1dp";
      {
        LinearLayout;
        layout_width="match_parent";
        layout_height="1";
      };
      {
        LinearLayout;
        layout_width="match_parent";
        backgroundColor="0x00000000";
        orientation="horizontal";
        layout_height="wrap";
        gravity="left";
        layout_marginLeft="5dp";
        layout_margin="3dp";
        {
          ImageView;
          colorFilter="0xFFFFFFFF";
          src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/device.png";
          layout_gravity="center";
          layout_width="20dp";
          layout_height="20dp";
          padding="1dp";
        };
        {
          TextView;
          text=" DEVICE";
          layout_width="25%w";
          id="";
          gravity="left|center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFFFFFFFF";
        };
        {
          TextView;
          text=": ";
          layout_width="wrap";
          layout_height="wrap";
          textSize="16sp";
          layout_gravity="center";
          textColor="0xFFFFFFFF";
        };
        {
          TextView;
          text="";
          layout_width="wrap";
          id="model";
          layout_marginLeft="5dp";
          gravity="center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFF00FF00";
        };
      };
    };
  };




  {
    CardView;
    id="di";
    layout_width="fill";
    layout_height="wrap";
    backgroundColor="0xFF202428";
    layout_gravity="center";
    layout_marginLeft="7dp";
    layout_marginRight="7dp";
    layout_margin="3dp";
    radius=20;
    cardElevation="5dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="vertical";
      layout_height="wrap";
      gravity="center";
      padding="1dp";
      {
        LinearLayout;
        layout_width="match_parent";
        layout_height="1";
      };
      {
        LinearLayout;
        layout_width="match_parent";
        backgroundColor="0x00000000";
        orientation="horizontal";
        layout_height="wrap";
        gravity="left";
        layout_marginLeft="5dp";
        layout_margin="3dp";
        {
          ImageView;
          colorFilter="0xFFFFFFFF";
          src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/expired.png";
          layout_gravity="center";
          layout_width="20dp";
          layout_height="20dp";
          padding="1dp";
        };
        {
          TextView;
          text=" EXPIRED";
          layout_width="25%w";
          id="";
          gravity="left|center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFFFFFFFF";
        };
        {
          TextView;
          text=": ";
          layout_width="wrap";
          layout_height="wrap";
          textSize="16sp";
          layout_gravity="center";
          textColor="0xFFFFFFFF";
        };
        {
          TextView;
          text="";
          layout_width="wrap";
          id="exptext";
          layout_marginLeft="5dp";
          gravity="center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFF00FF00";
        };
      };
    };
  };





  {
    CardView;
    id="sm";
    layout_width="fill";
    layout_height="wrap";
    backgroundColor="0xFF202428";
    layout_gravity="center";
    layout_marginLeft="7dp";
    layout_marginRight="7dp";
    layout_margin="3dp";
    radius=20;
    cardElevation="5dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="vertical";
      layout_height="wrap";
      gravity="center";
      padding="1dp";
      {
        LinearLayout;
        layout_width="match_parent";
        layout_height="1";
      };
      {
        LinearLayout;
        layout_width="match_parent";
        backgroundColor="0x00000000";
        orientation="horizontal";
        layout_height="wrap";
        gravity="left";
        layout_marginLeft="5dp";
        layout_margin="3dp";
        {
          TextView;
          text=" MODE";
          layout_width="25%w";
          id="";
          gravity="left|center";
          layout_gravity="center";
          layout_height="wrap";
          textSize="12sp";
          textColor="0xFFFFFFFF";
        };

      };
      {
        LinearLayout;
        layout_width="match_parent";
        backgroundColor="0x00000000";
        orientation="horizontal";
        layout_height="wrap";
        gravity="left|center";
        {
          RadioGroup;
          layout_gravity="left|center";
          layout_height="wrap";
          layout_width="wrap";
          orientation="vertical";

          {
            RadioButton;
            textSize="12sp";
            layout_gravity="left|center";
            layout_width="wrap";
            text="ROOT";
            textColor="0xFF00FF00";
            id="btnRoot";
            layout_height="wrap";
          };
          {
            RadioButton;
            textSize="12sp";
            layout_gravity="left|center";
            layout_width="wrap";
            text="NOT ROOT";
            textColor="0xFFFF0000";
            id="btnNoroot";
            layout_height="wrap";
          };
        };
      };
    };
  };






  {
    LinearLayout;
    layout_height="5dp";
  };

  {
    LinearLayout;
    orientation="horizontal";
    layout_width="match_parent";
    layout_height="80dp";
    layout_marginLeft="3dp";
    layout_marginRight="3dp";
    {
      CardView;
      backgroundColor="0xFFFF0000";
      layout_margin="5dp";
      layout_height="match_parent";
      id="start";
      CardElevation="3dp";
      layout_width="60dp";
      radius=10;
      layout_weight="1";
      layout_gravity="center";
      {
        LinearLayout;
        backgroundColor="0x00000000";
        layout_width="match_parent";
        orientation="horizontal";
        layout_height="match_parent";
        gravity="center";
        layout_gravity="center";
        {
          ImageView;
          layout_width="25dp";
          src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/start.png";
          layout_height="25dp";
          colorFilter="0xFFFFFFFF";
          layout_gravity="center";
          layout_margin="5dp";
        };
        {
          TextView;
          text="START";
          textSize="20sp";
          textColor="0xFFFFFFFF";
          layout_gravity="center";
        };
      };
    };
    {
      CardView;
      backgroundColor="0xFFFF0000";
      layout_margin="5dp";
      layout_height="match_parent";
      id="stop";
      CardElevation="3dp";
      layout_width="60dp";
      radius=10;
      layout_weight="1";
      layout_gravity="center";
      {
        LinearLayout;
        backgroundColor="0x00000000";
        layout_width="match_parent";
        orientation="horizontal";
        layout_height="match_parent";
        gravity="center";
        layout_gravity="center";
        {
          ImageView;
          layout_width="25dp";
          src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/stop.png";
          layout_height="25dp";
          colorFilter="0xFFFFFFFF";
          layout_gravity="center";
          layout_margin="5dp";
        };
        {
          TextView;
          text="STOP";
          textSize="20sp";
          textColor="0xFFFFFFFF";
          layout_gravity="center";
        };
      };
    };
  };
  {
    LinearLayout;
    layout_height="0dp";
  };
  {
    CardView;
    id="";
    layout_width="fill";
    layout_height="50dp";
    backgroundColor="0xFF008EFF";
    layout_marginLeft="8dp";
    layout_marginRight="8dp";
    radius="3dp";
    cardElevation="0dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="horizontal";
      layout_height="wrap";
      gravity="center";
      layout_gravity="center";
      id="startgame";
      {
        TextView;
        text="STARTGAME";
        layout_width="wrap";
        gravity="center";
        layout_gravity="center";
        layout_height="wrap";
        textSize="20sp";
        textColor="0xFFFFFFFF";
      };
    };
  };


  {
    LinearLayout;
    layout_height="5dp";
  };


  {
    CardView;
    id="";
    layout_width="fill";
    layout_height="30dp";
    backgroundColor="0xFF008EFF";
    layout_marginLeft="8dp";
    layout_marginRight="8dp";
    radius="3dp";
    cardElevation="0dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="horizontal";
      layout_height="wrap";
      gravity="center";
      layout_gravity="center";
      id="menu";
      {
        TextView;
        text="PATCHER";
        layout_width="wrap";
        gravity="center";
        layout_gravity="center";
        layout_height="wrap";
        textSize="20sp";
        textColor="0xFFFFFFFF";
      };
    };
  };



  {
    LinearLayout;
    layout_height="5dp";
  };


  {
    CardView;
    id="";
    layout_width="fill";
    layout_height="30dp";
    backgroundColor="0xFF008EFF";
    layout_marginLeft="8dp";
    layout_marginRight="8dp";
    radius="3dp";
    cardElevation="0dp";
    {
      LinearLayout;
      layout_width="match_parent";
      backgroundColor="0x00000000";
      orientation="horizontal";
      layout_height="wrap";
      gravity="center";
      layout_gravity="center";
      id="exit";
      {
        TextView;
        text="EXIT";
        layout_width="wrap";
        gravity="center";
        layout_gravity="center";
        layout_height="wrap";
        textSize="20sp";
        textColor="0xFFFFFFFF";
      };
    };
  };



  {
    LinearLayout;
    layout_gravity="center";
    layout_width="fill";
    Orientation="vertical";
    gravity="center|bottom";
    layout_height="fill";
  };
};


----ICONFLOATING------


icon={
  LinearLayout;
  layout_height="fill";
  layout_width="fill";
  id="iconfloating";
  {
    CardView,
    layout_width="fill",
    layout_height="fill";
    backgroundColor="0x00FFFFFF";
    CardElevation="5dp",
    radius="50";
    id="iconf";
    {
      ImageView;
      layout_height="50dp";
      layout_width="50dp";
      src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/iconf.png";
      id="Win_minWindow";
      padding="3dp";
      colorFilter="#090707";
    };
  };
};


-----FLOATING-------


floating={
  LinearLayout,
  layout_width="-1",
  layout_height="-1",
  id="menufloating";
  background="transparent",
  orientation="vertical";
  gravity="center";
  {
    LinearLayout,
    id="win_mainviewX",
    layout_width="80%w",
    layout_height="52%h";
    backgroundColor="0xFF202428";
    gravity="center";
    {
      LinearLayout;
      orientation="vertical";
      {
        CardView,
        id="win_mainview",
        layout_width="80%w",
        layout_height="52%h";
        backgroundColor="0x00000000",
        CardElevation="0dp",
        layout_gravity="center";
        radius="0";
        {
          LinearLayout;
          orientation="vertical";
          layout_width="fill_parent";
          background="transparent",
          {
            LinearLayout;
            layout_width="fill_parent";
            background="transparent";
            {
              CardView,
              radius="0dp";
              layout_width="fill",
              layout_height="wrap",
              backgroundColor="0x00000000",
              CardElevation="0dp",
              layout_gravity="center";
              id="fl";
              {
                LinearLayout;
                orientation="horizontal";
                layout_height="30dp";
                layout_width="fill";
                gravity="center|left";
                background="transparent",
                {
                  TextView;
                  layout_width="wrap",
                  padding="5dp";
                  text="";
                  id="asp";
                  textSize="18sp";
                  textColor="#EFDC05";
                  gravity="center";
                };

                {
                  LinearLayout;
                  orientation="horizontal";
                  layout_height="wrap";
                  layout_width="fill";
                  gravity="center|right";
                  background="transparent",
                  {
                    ImageView;
                    id="t1",
                    layout_width="30dp";
                    src="https://raw.githubusercontent.com/missfangg/X-HANNYA/main/ICON/ic_power.png";
                    layout_height="30dp";
                    colorFilter="0xFFFF0000";
                    layout_gravity="center|right";
                    layout_margin="0dp";
                  };
                };
              };
            };
          };

          {
            PageView,
            id="pg",
            layout_width="fill",
            layout_height="fill",
            padding="1dp";
            background="transparent";
            pages={
              {
                LinearLayout;
                orientation="vertical";
                padding="5dp";
                {
                  ScrollView;
                  layout_width="fill";
                  layout_height="fill",
                  layout_gravity="center_horizontal";
                  {
                    LinearLayout;
                    layout_height="-1";
                    layout_width="-1";
                    orientation="vertical";
                    {
                      LinearLayout;
                      id="_drawer_header";
                      layout_height="-2";
                      layout_width="-1";
                      orientation="vertical";

                      {
                        LinearLayout;
                        orientation="horizontal";
                        layout_height="1";
                        layout_width="-1";
                      };



                      {
                        LinearLayout,
                        layout_height = "0.4%h",
                        layout_width = "fill"
                      },
                      {
                        LinearLayout,
                        layout_width = "fill",
                        layout_height = "wrap",
                        gravity = "center_horizontal",
                        backgroundColor = "0xFFFF0000",
                        {
                          TextView;
                          text="MENU";
                          textColor="0xFFFFFFFF";
                          id="";
                          layout_gravity="center";
                          textSize="16sp";
                          layout_width="wrap";
                          layout_height="wrap";
                        }
                      };
                      {
                        LinearLayout,
                        layout_height = "0.5%h",
                        layout_width = "fill"
                      },


                      {
                        Switch;
                        text="BYPASS SAFETY [ LOBBY ]";
                        textColor="0xFFFFFFFF";
                        id="bypass";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };

                      {
                        Switch;
                        text="ANTI REPORT [ LOBBY ]";
                        textColor="0xFFFFFFFF";
                        id="antiban";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };

                      {
                        Switch;
                        text="VISIBLE IN GRASS [ LOBBY ]";
                        textColor="0xFFFFFFFF";
                        id="fixgrass";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };


                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };
                      {
                        Switch;
                        text="RADAR MAP";
                        textColor="0xFFFFFFFF";
                        id="radarmap";
                        textSize="12sp";
                        layout_gravity="center";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };

                      {
                        Switch;
                        text="REMOVE GRASS";
                        textColor="0xFFFFFFFF";
                        id="removegrass";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };
                      {
                        Switch;
                        text="ESP LOCK & HEALTH";
                        textColor="0xFFFFFFFF";
                        id="esplock";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };
                      {
                        Switch;
                        text="UNLOCK ALL SKIN";
                        textColor="0xFFFFFFFF";
                        id="unlockskin";
                        textSize="12sp";
                        layout_gravity="center";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };
                      {
                        Switch;
                        text="QUICK CHAT NO COOLDOWN";
                        textColor="0xFFFFFFFF";
                        id="spamchat";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };
                      {
                        Switch;
                        text="SPELL & SKILL NO COOLDOWN";
                        textColor="0xFFFFFFFF";
                        id="skillnocd";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };

                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };

                      {
                        Switch;
                        text="HIDE NICKNAME";
                        textColor="0xFFFFFFFF";
                        id="hidename";
                        layout_gravity="center";
                        textSize="12sp";
                        layout_width="fill";
                        layout_height="wrap";
                      };


                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };


                      {
                        TextView;
                        id="text";
                        layout_width="wrap_content";
                        layout_height="wrap_content";
                        text="DRONE VERTICAL 0 X";
                        textColor="0xFFFFFFFF";
                        textSize="12sp";
                      };
                      {
                        CardView;
                        layout_width = "fill",
                        radius="20";
                        layout_height = "wrap",
                        layout_gravity = "center",
                        backgroundColor = "0xFF202428",
                        {
                          SeekBar;
                          id="droneviewtop";
                          layout_width="match_parent";
                          layout_height="wrap_content";
                          max="10";
                          progress="0";
                        };
                      };




                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="10dp";
                      };

                      {
                        TextView;
                        id="text2";
                        layout_width="wrap_content";
                        layout_height="wrap_content";
                        text="DRONE HORIZONTAL 0 X";
                        textColor="0xFFFFFFFF";
                        textSize="12sp";
                      };

                      {
                        CardView;
                        layout_width = "fill",
                        radius="20";
                        layout_height = "wrap",
                        layout_gravity = "center",
                        backgroundColor = "0xFF202428",

                        {
                          SeekBar;
                          id="droneviewside";
                          layout_width="match_parent";
                          layout_height="wrap_content";
                          max="10";
                          progress="0";
                        };
                      };
                      {
                        LinearLayout;
                        layout_width="wrap";
                        layout_height="3dp";
                      };


                      {
                        LinearLayout,
                        layout_height = "0.5%h",
                        layout_width = "fill"
                      },
                      {
                        LinearLayout,
                        layout_height = "0.5%h",
                        layout_width = "fill"
                      },
                      {
                        ToggleButton,
                        textSize="11sp";
                        layout_grafity="center";
                        text = "ENEMY LAG",
                        layout_height = "32dp",
                        textOn = "ENEMY LAG",
                        id = "enemylag",
                        textColor = "0xFFFFFFFF",
                        textOff = "ENEMY LAG",
                        layout_width = "fill"
                      };
                      {
                        LinearLayout,
                        layout_height = "0.5%h",
                        layout_width = "fill"
                      },
                      {
                        ToggleButton,
                        textSize="11sp";
                        layout_grafity="center";
                        text = "FIX DRONE VIEW",
                        layout_height = "32dp",
                        textOn = "FIX DRONE VIEW",
                        id = "fix",
                        textColor = "0xFFFFFFFF",
                        textOff = "FIX DRONE VIEW",
                        layout_width = "fill"
                      };
                      {
                        LinearLayout,
                        layout_height = "0.5%h",
                        layout_width = "fill"
                      },
                      {
                        ToggleButton,
                        textSize="11sp";
                        layout_grafity="center";
                        text = "CLEAR CACHE & LOGS",
                        layout_height = "32dp",
                        textOn = "CLEAR CACHE & LOGS",
                        id = "logs",
                        textColor = "0xFFFFFFFF",
                        textOff = "CLEAR CACHE & LOGS",
                        layout_width = "fill"
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};



